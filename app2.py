from reportlab.pdfgen import canvas
from PyPDF2 import PdfFileWriter, PdfFileReader
# from svglib.svglib import svg2rlg
from reportlab.graphics import renderPDF
import base64
# import string
import PIL
from reportlab.platypus.flowables import Image
from reportlab.lib.utils import ImageReader
import StringIO
# drawing = svg2rlg("HtmlToSvg.svg")
# renderPDF.drawToFile(drawing, "woot.pdf")
# Create the watermark from an image
# c = canvas.Canvas('watermark.pdf')
#
# # {'src': 'Im2.jpg', 'width': '251', 'bbox': '48.254,225.986,299.993,388.043', 'height': '162'}, {'src': 'Im2.jpg', 'width': '251', 'bbox': '305.461,225.393,557.200,387.451', 'height': '162'}
# # {'src': 'Im2.jpg', 'width': '251', 'bbox': '305.461,225.393,557.200,387.451', 'height': '162'}
# # {'src': 'Im2.jpg', 'width': '55', 'bbox': '517.460,86.731,573.040,115.559', 'height': '28'}
# # <figure name="img2" bbox="120.310,455.690,217.840,549.910">
# # <image src="img2.jpg" width="97" height="94" />
# # </figure>
# # Draw the image at x, y. I positioned the x,y to be where i like here
# raw = ''
# photo = base64.b64decode(raw)
# # c.drawImage(ImageReader(StringIO.StringIO(photo)), 48, 225, width=251, height=162, mask='auto')
# c.drawImage('pdfstuff/pdfstuff-pdfgen/datatable.png', 48, 225, width=251, height=162, mask='auto')
# c.drawImage(ImageReader(StringIO.StringIO(photo)), 305, 225, width=251, height=162, mask='auto')

# c.drawImage('pdfstuff/pdfstuff-pdfgen/sparkline.png', 305, 225, width=251, height=162, mask='auto')
# c.drawImage('DT.png', 110, 465, width=115, height=100, mask='auto')
# Add some custom text for good measure
# c.drawString(15, 20,"Hello World")
# c.save()

# Get the watermark file you just created
watermark = PdfFileReader(open("pdfstuff/pdfstuff-pdfgen/datatable5.pdf", "rb"))

# Get our files ready
output_file = PdfFileWriter()
input_file = PdfFileReader(open("final-document-output.pdf", "rb"))

# Number of pages in input document
page_count = input_file.getNumPages()

# Go through all the input file pages to add a watermark to them
for page_number in range(page_count):
    print "Watermarking page {} of {}".format(page_number, page_count)
    # merge the watermark with the page
    input_page = input_file.getPage(page_number)
    input_page.mergePage(watermark.getPage(0))
    # add page from input file to output document
    output_file.addPage(input_page)

# finally, write "output" to document-output.pdf
with open("document-output.pdf", "wb") as outputStream:
    output_file.write(outputStream)

watermark = PdfFileReader(open("pdfstuff/pdfstuff-pdfgen/sparkline5.pdf", "rb"))

# Get our files ready
output_file = PdfFileWriter()
input_file = PdfFileReader(open("document-output.pdf", "rb"))

# Number of pages in input document
page_count = input_file.getNumPages()

# Go through all the input file pages to add a watermark to them
for page_number in range(page_count):
    print "Watermarking page {} of {}".format(page_number, page_count)
    # merge the watermark with the page
    input_page = input_file.getPage(page_number)
    input_page.mergePage(watermark.getPage(0))
    # add page from input file to output document
    output_file.addPage(input_page)

# finally, write "output" to document-output.pdf
with open("final-document-output.pdf", "wb") as outputStream:
    output_file.write(outputStream)
